====Minikube commands ======
minikube start --kubernetes-version v1.8.0
minikube config set WantUpdateNotification false
minikube version
minikube stop
minikube ip
minikube ssh
minikube dashboard
minikube service list
minikube ssh "docker ps -a"
minikube addons list
minikube addons enable dashboard


kubectl create -f https://raw.githubusercontent.com/nuthankumar/YAML_FILE/master/mysql-pv.yaml
kubectl create -f https://raw.githubusercontent.com/nuthankumar/YAML_FILE/master/mysql-deployment.yaml
kubectl run -it --rm --image=mysql:5.7 --restart=Never mysql-client -- mysql -h mysql -ppassword
create database btp;
use btp;


CREATE TABLE `role` (
  `role_id` int(11) NOT NULL AUTO_INCREMENT,
  `role` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`role_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

CREATE TABLE `user` (
  `user_id` int(11) NOT NULL AUTO_INCREMENT,
  `active` int(11) DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `last_name` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

CREATE TABLE `user_role` (
  `user_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  PRIMARY KEY (`user_id`,`role_id`),
  KEY `FKa68196081fvovjhkek5m97n3y` (`role_id`),
  CONSTRAINT `FK859n2jvi8ivhui0rl0esws6o` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`),
  CONSTRAINT `FKa68196081fvovjhkek5m97n3y` FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `training` (
  `training_id` int(11) NOT NULL AUTO_INCREMENT,
  `tname` varchar(255) DEFAULT NULL,
   `summary` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`training_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
INSERT INTO `role` VALUES (1,'ADMIN');
INSERT INTO `user` VALUES (1,1,'nuthan@gmail.com','nuthan','nuthan_name','nuthan_password');


kubectl create -f https://raw.githubusercontent.com/nuthankumar/YAML_FILE/master/btp.yaml
kubectl create -f https://raw.githubusercontent.com/nuthankumar/YAML_FILE/master/btp_service.yaml

kubectl get deployments
kubectl get pods
kubectl get services

====Helm installation=====
curl -Lo /tmp/helm-linux-amd64.tar.gz https://kubernetes-helm.storage.googleapis.com/helm-v2.8.0-linux-amd64.tar.gz
tar -xvf /tmp/helm-linux-amd64.tar.gz -C /tmp/
chmod +x  /tmp/linux-amd64/helm && sudo mv /tmp/linux-amd64/helm /usr/local/bin/

# Initialize helm, install Tiller(the helm server side component)
helm init


kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'      



# Make sure we get the latest list of chart
helm repo update
helm ls

